//#include "util.cuh"
#include "kernels.cuh"

//#include "thrust/iterator/counting_iterator.h"

namespace cudasw4{

// using ScoreIterInst = TopNMaximaArray;
// using PosIterInst = decltype(thrust::make_counting_iterator<size_t>(0));
template void call_NW_local_affine_single_pass_float<2, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<4, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<6, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<8, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<10, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<12, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<14, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<16, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<18, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<20, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<22, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<24, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<26, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<28, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<30, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<32, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<34, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<36, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<38, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);
template void call_NW_local_affine_single_pass_float<40, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);

template void call_NW_local_affine_multi_pass_float<20, ScoreIterInst, PosIterInst>(BlosumType, const char * const, ScoreIterInst const, float2 * const, float2 * const, const size_t* const, const SequenceLengthT* const, PosIterInst const, const int, const char4*, const SequenceLengthT, const float, const float, cudaStream_t);

template void call_launch_process_overflow_alignments_kernel_NW_local_affine_multi_pass_float<20, ScoreIterInst, ReferenceIdT*>(const int* const, float2* const, const size_t, const char * const, ScoreIterInst const, const size_t* const, const SequenceLengthT* const, ReferenceIdT* const, const char4* const, const SequenceLengthT, const float, const float, cudaStream_t);
} // namespace cudasw4